


# list of users in Active directory
Import-Module ActiveDirectory

# Get all AD groups
$groups = Get-ADGroup -Filter * -Properties Members

# Create an empty array to store group and user details
$groupsWithUsers = @()

# Iterate through each group
foreach ($group in $groups) {
    $groupUsers = Get-ADGroupMember -Identity $group | Where-Object { $_.objectClass -eq "user" } | Select-Object @{Name="Group";Expression={$group.Name}}, Name, SamAccountName
    $groupsWithUsers += $groupUsers
}

# Export to CSV
$groupsWithUsers | Export-Csv -Path "AD_Groups_Users.csv" -NoTypeInformation

Get a list of memeber linked to a group

# Replace 'GroupName' with the name of your target group
$groupName = "GroupName"

# Get members of the specified group
$groupMembers = Get-ADGroupMember -Identity $groupName | Select-Object Name, SamAccountName, ObjectClass

# Display the list of group members
$groupMembers



# Replace 'GroupName' with the name of your target group
$groupName = "GroupName"

# Get members of the specified group
$groupMembers = Get-ADGroupMember -Identity $groupName | Select-Object Name, SamAccountName, ObjectClass

# Export the list of group members to a CSV file
$groupMembers | Export-Csv -Path "GroupMembers.csv" -NoTypeInformation


Get a list of disabled users in AD


# Get a list of disabled users from Active Directory
$disabledUsers = Get-ADUser -Filter {Enabled -eq $false} -Properties SamAccountName, DistinguishedName

# Output the list of disabled users
$disabledUsers | Select-Object SamAccountName, DistinguishedName | Format-Table


# Specify the server name and time range for logon events
$serverName = "YourServerName"
$startTime = (Get-Date).AddDays(-7)  # Set the start time (e.g., 7 days ago)

List of users logged on to a server

# Retrieve logon events from the Security log
$logonEvents = Get-WinEvent -ComputerName $serverName -LogName Security -FilterXPath "*[System[EventID=4624]] and *[EventData[Data[@Name='LogonType']='2' or @Name='LogonType']='10'] and *[EventData[Data[@Name='LogonType'] != '5']]" -StartTime $startTime |
    Where-Object { $_.Message -match 'Account Name:\s+(\S+)' } |
    ForEach-Object {
        $eventTime = $_.TimeCreated
        $matches = $_.Message -match 'Account Name:\s+(\S+)' | Out-Null
        [PSCustomObject]@{
            UserName = $matches[1]
            Time = $eventTime
        }
    }

# Display the list of users and login times
$logonEvents | Sort-Object Time | Format-Table -AutoSize



